/* CSB and CB with 1 CS
	F0101Z2 zFile 1 VER0006
	for Customers with 1 ShipTo and 1 BillTo
	This query uses a reference file created to determine if these are CSB or CB
	20190404 Tom Sampson

	VER0002
	- fixes after discussion with Steve

	VER0003
	- fixed SZALKY

	VER0004
	- fixed consraints on address parts that were failing on load

	VER0005
	-- prepend BC_ to SZALKY

	VER0006
	-- SZAT1 changed CSB to C

	VER0007
	-- replaced null results with ''
	
*/

SELECT
 'JDE'					SZEDUS						
,'BAL0001'				SZEDBT -- this is load ref, can put what we want in here
,72000 + CUSTOMER.ROWID		
						SZEDTN
,0						SZEDLN
,''						SZEDCT
,'JDEAB'				SZTYTN
,''						SZEDFT
,''						SZEDDT
,''						SZDRIN
,''						SZEDDL
,'N'					SZEDSP
,''						SZPNID
,'A'					SZTNAC
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)		
						SZAN8
,'BC_' + LTRIM(RTRIM(CUSTOMER.ID))				
						SZALKY -- old customer ID ref
,''						SZTAX
,LEFT(
	LTRIM(RTRIM(
		REPLACE(
			REPLACE(
				CUSTOMER.NAME
			,'.','')
		,',','')
	))
 ,40)					SZALPH
,''						SZDC
,'          20'			SZMCU -- 10 spaces + 20 needs to be a strng
,''						SZSIC
,''						SZLNGP
,CASE
	WHEN CSB_REF.CSB = '1'
		THEN 'C'
		ELSE 'CB'
 END					SZAT1 -- CASE only for this query, hard-code the rest
,''						SZCM
,'2'					SZTAXC
,'N'					SZAT2
,'N'					SZAT3
,'N'					SZAT4
,'Y'					SZATR
,'N'					SZAT5
,'N'					SZATP
,'N'					SZATPR
,'N'					SZAB3
,'N'					SZATE
,''						SZSBLI
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE()) 
						SZEFTB -- JDE julian today
,''						SZAN81 -- CB Lookup only where CS
,''						SZAN82
,''						SZAN83
,''						SZAN84
,''						SZAN86
,''						SZAN85
,''						SZAC01
,''						SZAC02
,''						SZAC03
,''						SZAC04
,''						SZAC05
,''						SZAC06
,''						SZAC07
,''						SZAC08
,''						SZAC09
,''						SZAC10
,''						SZAC11
,''						SZAC12
,''						SZAC13
,''						SZAC14
,''						SZAC15
,''						SZAC16
,''						SZAC17
,''						SZAC18
,''						SZAC19
,''						SZAC20
,''						SZAC21
,''						SZAC22
,''						SZAC23
,''						SZAC24
,''						SZAC25
,''						SZAC26
,''						SZAC27
,''						SZAC28
,''						SZAC29
,''						SZAC30
,''						SZGLBA
,0						SZPTI
,'0'					SZPDI
,''						SZMSGA
,''						SZRMK
,''						SZTXCT
,''						SZTX2
,''						SZALP1
,''						SZURCD
,'0'					SZURDT
,0						SZURAT
,0						SZURAB
,''						SZURRF
,''						SZMLNM
,''						SZMLN1
,ISNULL(CASE 
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_1' THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_1)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_2' THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_2)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_1' THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_2' THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_1' THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_1)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_2' THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_2)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_1' THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_2' THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),40)
 END,'')				SZADD1
  
,ISNULL(CASE 
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_1'   THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_2)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_2'   THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_3)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_1'   THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),40)
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_2'   THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_3)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_1'   THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_2)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_2'   THEN LEFT(LTRIM(RTRIM(CUSTOMER.ADDR_3)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_1'   THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),40)
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_2'   THEN LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_3)),40)
	ELSE ''
 END,'')				SZADD2
,''						SZADD3
,''						SZADD4
,ISNULL(CASE 
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_1' THEN CUSTOMER.ZIPCODE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_2' THEN CUSTOMER.ZIPCODE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_1' THEN CUST_ADDRESS.ZIPCODE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_2' THEN CUST_ADDRESS.ZIPCODE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_1' THEN CUSTOMER.ZIPCODE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_2' THEN CUSTOMER.ZIPCODE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_1' THEN CUST_ADDRESS.ZIPCODE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_2' THEN CUST_ADDRESS.ZIPCODE
 END,'')				SZADDZ
,ISNULL(CASE 
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_1' THEN CUSTOMER.CITY
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_2' THEN CUSTOMER.CITY
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_1' THEN CUST_ADDRESS.CITY
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_2' THEN CUST_ADDRESS.CITY
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_1' THEN CUSTOMER.CITY
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_2' THEN CUSTOMER.CITY
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_1' THEN CUST_ADDRESS.CITY
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_2' THEN CUST_ADDRESS.CITY
 END,'')				SZCTY1
,'US'					SZCTR
,ISNULL(CASE 
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_1' AND LEN(CUSTOMER.STATE) = 2 THEN CUSTOMER.STATE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'BT_ADDR_2' AND LEN(CUSTOMER.STATE) = 2 THEN CUSTOMER.STATE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_1' AND LEN(CUST_ADDRESS.STATE) = 2 THEN CUST_ADDRESS.STATE
	WHEN CSB_REF.CSB = '1' AND CSB_REF.CSB_ADDR1_SOURCE = 'ST_ADDR_2' AND LEN(CUST_ADDRESS.STATE) = 2 THEN CUST_ADDRESS.STATE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_1' AND LEN(CUSTOMER.STATE) = 2 THEN CUSTOMER.STATE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'BT_ADDR_2' AND LEN(CUSTOMER.STATE) = 2 THEN CUSTOMER.STATE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_1' AND LEN(CUST_ADDRESS.STATE) = 2 THEN CUST_ADDRESS.STATE
	WHEN CSB_REF.CSB <> '1' AND CSB_REF.CB_ADDR1_SOURCE = 'ST_ADDR_2' AND LEN(CUST_ADDRESS.STATE) = 2 THEN CUST_ADDRESS.STATE
	ELSE ''
 END,'')				SZADDS
,''  SZCOUN -- no county in infor
,ISNULL(CASE
	WHEN 
		CONTACT_PHONE IS NOT NULL
		THEN
		LEFT(REPLACE(CONTACT_PHONE,'-',''), 3)
		ELSE ''
 END,'')				SZAR1
,ISNULL(CASE
	WHEN
		CONTACT_PHONE IS NOT NULL
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END,'') 				SZPH1
,''  					SZPHT1
,ISNULL(CASE
	WHEN 
		CONTACT_FAX IS NOT NULL
		THEN
		LEFT(REPLACE(CONTACT_FAX,'-',''), 3)
		ELSE ''
 END,'')				SZAR2
,ISNULL(CASE
	WHEN
		CONTACT_FAX IS NOT NULL
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CONTACT_FAX,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CONTACT_FAX,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END,'') 				SZPH2 -- add dash fix
,'FAX'  				SZPHT2
,''  					SZTORG
,'TSAMPSON'				SZUSER
,'Import'				SZPID
,''						SZJOBN
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE())	
						SZUPMJ
,''						SZTDAY
,''						SZUPMT
,''						SZPRGF
,''						SZSCCLTP
,''						SZPA8
,''						SZTICKER
,''						SZEXCHG
,''						SZDUNS
,''						SZCLASS01
,''						SZCLASS02
,''						SZCLASS03
,''						SZCLASS04
,''						SZCLASS05
,''						SZNOE
,''						SZGROWTHR
,''						SZYEARSTAR
,''						SZAEMPGP
,''						SZACTIN
,''						SZREVRNG
		
FROM
	(
		SELECT DISTINCT 
				CUSTOMER_ID
				,SHIP_TO_ADDR_NO
		FROM CUSTOMER_ORDER ORDERS
		WHERE YEAR(ORDER_DATE) >= 2015
		AND SHIP_TO_ADDR_NO <= 1
	) CUSLIST

JOIN CUSTOMER CUSTOMER -- Bill To Addresses
	ON CUSLIST.CUSTOMER_ID = CUSTOMER.ID

JOIN CUST_ADDRESS CUST_ADDRESS -- Ship To Address
	ON CUSTOMER.ID = CUST_ADDRESS.CUSTOMER_ID
	AND CUST_ADDRESS.ADDR_NO = 1

JOIN _CSB_REF$ CSB_REF
	ON CUSLIST.CUSTOMER_ID = CSB_REF.CUSTOMER_ID

UNION


/* CB more than 1 CS
	F0101Z2 zFile 2 VER0004
	CB for Customers with >1 ShipTo 

	20190404 Tom Sampson
	VER0002
	- initial changes after review with Steve

	VER0003
	-- prepend BC_ to SZALKY

	VER0004
	-- added exclusion CSB_REF.CUSTOMER_ID IS NULL
*/


SELECT
 'JDE'					SZEDUS						
,'BAL0002'				SZEDBT
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)	
						SZEDTN -- primary key edi
,0						SZEDLN
,''						SZEDCT
,'JDEAB'				SZTYTN
,''						SZEDFT
,''						SZEDDT
,''						SZDRIN
,''						SZEDDL
,'N'					SZEDSP
,''						SZPNID
,'A'					SZTNAC
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)		
						SZAN8 -- primary key
,'BC_' + LTRIM(RTRIM(CUSTOMER.ID))		
						SZALKY -- for CSB and SB this is default old CUSTOMER.ID, for CS, it's CUST_ADDRESS.CUSTOMER_ID + ADDR_NO
,''						SZTAX
,LEFT(
	LTRIM(RTRIM(
		REPLACE(
			REPLACE(
				CUSTOMER.NAME
			,'.','')
		,',','')
	))
 ,40)					SZALPH
,''						SZDC -- JDE does automatically, leave it ''
,'          20'			SZMCU -- ten spaces then a 20
,''						SZSIC
,''						SZLNGP
,'CB'					SZAT1 -- CSB, CB, CS
,''						SZCM
,'2'					SZTAXC
,'N'					SZAT2
,'N'					SZAT3
,'N'					SZAT4
,'Y'					SZATR
,'N'					SZAT5
,'N'					SZATP
,'N'					SZATPR
,'N'					SZAB3
,'N'					SZATE
,''						SZSBLI
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE()) 
						SZEFTB -- JDE julian today
,''						SZAN81 -- CB Lookup only where CS
,''						SZAN82
,''						SZAN83
,''						SZAN84
,''						SZAN86
,''						SZAN85
,''						SZAC01
,''						SZAC02
,''						SZAC03
,''						SZAC04
,''						SZAC05
,''						SZAC06
,''						SZAC07
,''						SZAC08
,''						SZAC09
,''						SZAC10
,''						SZAC11
,''						SZAC12
,''						SZAC13
,''						SZAC14
,''						SZAC15
,''						SZAC16
,''						SZAC17
,''						SZAC18
,''						SZAC19
,''						SZAC20
,''						SZAC21
,''						SZAC22
,''						SZAC23
,''						SZAC24
,''						SZAC25
,''						SZAC26
,''						SZAC27
,''						SZAC28
,''						SZAC29
,''						SZAC30
,''						SZGLBA
,0						SZPTI
,'0'					SZPDI
,''						SZMSGA
,''						SZRMK
,''						SZTXCT
,''						SZTX2
,''						SZALP1
,''						SZURCD
,'0'					SZURDT
,0						SZURAT
,0						SZURAB
,''						SZURRF
,''						SZMLNM
,''						SZMLN1
,CASE
	WHEN CUSTOMER.ADDR_1 IS NOT NULL
	THEN
	 LTRIM(RTRIM(
		LEFT(
			LTRIM(RTRIM(
		CUSTOMER.ADDR_1
				)),40)))
	ELSE ''
 END					SZADD1
,CASE
	WHEN CUSTOMER.ADDR_2 IS NOT NULL
	THEN
	 LTRIM(RTRIM(
		LEFT(
			LTRIM(RTRIM(
		CUSTOMER.ADDR_2
				)),40)))
	ELSE ''
 END					SZADD2
,''						SZADD3
,''						SZADD4
,CASE 
	WHEN LEN(CUSTOMER.ZIPCODE) <= 12
	THEN LTRIM(RTRIM(CUSTOMER.ZIPCODE))
	ELSE ''
 END					SZADDZ
,CASE
	WHEN LEN(CUSTOMER.CITY) <= 25
	THEN LTRIM(RTRIM(CUSTOMER.CITY))
	ELSE ''	
 END					SZCTY1
,'US'					SZCTR

,CASE
	WHEN LEN(CUSTOMER.STATE) = 2
	THEN CUSTOMER.STATE
	ELSE ''	
 END					SZADDS
,''						SZCOUN
,CASE
	WHEN 
		LEFT(REPLACE(CUSTOMER.CONTACT_PHONE,'-',''), 3) IS NOT NULL
		AND LEFT(REPLACE(CUSTOMER.CONTACT_PHONE,'-',''), 3) <> ''
		AND LEFT(LTRIM(RTRIM(CUSTOMER.CONTACT_PHONE)),1) <= '9'
		THEN
		LEFT(REPLACE(CUSTOMER.CONTACT_PHONE,'-',''), 3)
		ELSE ''
 END					SZAR1
,CASE
	WHEN
		CUSTOMER.CONTACT_PHONE IS NOT NULL
		AND 	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),4) <> ''
		AND LEFT(LTRIM(RTRIM(CUSTOMER.CONTACT_PHONE)),1) <= '9'
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_PHONE,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END					SZPH1
,''						SZPHT1
,CASE
	WHEN 
		LEFT(REPLACE(CUSTOMER.CONTACT_FAX,'-',''), 3) IS NOT NULL
		AND LEFT(REPLACE(CUSTOMER.CONTACT_FAX,'-',''), 3) <> ''
		AND LEFT(LTRIM(RTRIM(CUSTOMER.CONTACT_FAX)),1) <= '9'
		THEN
		LEFT(REPLACE(CUSTOMER.CONTACT_FAX,'-',''), 3)
		ELSE ''
 END					SZAR2
,CASE
	WHEN
		CUSTOMER.CONTACT_FAX IS NOT NULL
		AND 	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_FAX,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_FAX,'+',''),' ',''),'-',''),10),7),4) <> ''
		AND LEFT(LTRIM(RTRIM(CUSTOMER.CONTACT_FAX)),1) <= '9'
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_FAX,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUSTOMER.CONTACT_FAX,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END					SZPH2
,'FAX'					SZPHT2 
,''						SZTORG
,'TSAMPSON'				SZUSER
,'Import'				SZPID
,''						SZJOBN
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE())	
						SZUPMJ
,''						SZTDAY
,''						SZUPMT
,''						SZPRGF
,''						SZSCCLTP
,''						SZPA8 -- This is the CB ref, if CSB or CB this is NULL
,''						SZTICKER
,''						SZEXCHG
,''						SZDUNS
,''						SZCLASS01
,''						SZCLASS02
,''						SZCLASS03
,''						SZCLASS04
,''						SZCLASS05
,''						SZNOE
,''						SZGROWTHR
,''						SZYEARSTAR
,''						SZAEMPGP
,''						SZACTIN
,''						SZREVRNG

FROM CUSTOMER CUSTOMER

LEFT JOIN CUST_ADDRESS CUST_ADDRESS ON
	CUSTOMER.ID = CUST_ADDRESS.CUSTOMER_ID

JOIN CUSTOMER_ORDER ORDERS
	ON CUSTOMER.ID = ORDERS.CUSTOMER_ID

LEFT JOIN _CSB_REF$ CSB_REF
	ON CUSTOMER.ID = CSB_REF.CUSTOMER_ID

 WHERE CUST_ADDRESS.ADDR_NO > 1
AND YEAR(ORDERS.ORDER_DATE) >= 2015
AND CSB_REF.CUSTOMER_ID IS NULL

UNION


/* single CS , they are on match file used for CSB
	F0101Z2 zFile 3 VER0010
	CS from the CSB/CB review file

	20190404 Tom Sampson
	VER0002
	- changes after first review
	VER0003
	- added lots of error handling and rules to deal with ugly addresses
	VER0004
	-- removed any customer with more than one shipTo from this list
	VER0005
	-- replaced _ with -
	VER0006
	-- fixed the real problem, '0' where 0
	-- added business unit
	-- replaced - with _
	VER0007
	-- fixed SZAN81, int lookup of CB
	VER0008
	-- fixed phone number (again)
	VER0009
	-- prepend BC_ to SZALKY
	VER0010
	-- SZURRF -- for CS only, old CUST_ADDRESS.SHIPTO_ID
*/


SELECT
 'JDE'						SZEDUS						
,'BAL0003'					SZEDBT
,CAST(105000 + CUST_ADDRESS.ROWID AS INT)		SZEDTN -- primary key edi
,0							SZEDLN
,'' 						SZEDCT
,'JDEAB'					SZTYTN
,'' 						SZEDFT
,'' 						SZEDDT
,'' 						SZDRIN
,'' 						SZEDDL
,'N'						SZEDSP
,'' 						SZPNID
,'A'						SZTNAC
,CAST(105000 + CUST_ADDRESS.ROWID AS INT)		
							SZAN8 -- primary key
,'BC_' + LTRIM(RTRIM(CUSTOMER.ID)) + '_' + LTRIM(RTRIM(CAST(CUST_ADDRESS.ADDR_NO AS CHAR)))			
							SZALKY
,'' 						SZTAX
,LEFT(
	LTRIM(RTRIM(
		REPLACE(
			REPLACE(
				CUST_ADDRESS.NAME
			,'.','')
		,',','')
	))
 ,40)						SZALPH
,''							SZDC
,'          20'				SZMCU
,'' 						SZSIC
,'' 						SZLNGP
,'CS'						SZAT1
,'' 						SZCM
,'2'						SZTAXC
,'N'						SZAT2
,'N'						SZAT3
,'N'						SZAT4
,'Y'						SZATR
,'N'						SZAT5
,'N'						SZATP
,'N'						SZATPR
,'N'						SZAB3
,'N'						SZATE
,'' 						SZSBLI
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE()) 
							SZEFTB -- JDE julian today
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)	
							SZAN81
,'' 						SZAN82
,'' 						SZAN83
,'' 						SZAN84
,'' 						SZAN86
,'' 						SZAN85
,'' 						SZAC01
,'' 						SZAC02
,'' 						SZAC03
,'' 						SZAC04
,'' 						SZAC05
,'' 						SZAC06
,'' 						SZAC07
,'' 						SZAC08
,'' 						SZAC09
,'' 						SZAC10
,'' 						SZAC11
,'' 						SZAC12
,'' 						SZAC13
,'' 						SZAC14
,'' 						SZAC15
,'' 						SZAC16
,'' 						SZAC17
,'' 						SZAC18
,'' 						SZAC19
,'' 						SZAC20
,'' 						SZAC21
,'' 						SZAC22
,'' 						SZAC23
,'' 						SZAC24
,'' 						SZAC25
,'' 						SZAC26
,'' 						SZAC27
,'' 						SZAC28
,'' 						SZAC29
,'' 						SZAC30
,'' 						SZGLBA
,0							SZPTI
,'0'						SZPDI
,''							SZMSGA
,''							SZRMK
,''							SZTXCT
,''							SZTX2
,''							SZALP1
,''							SZURCD
,'0'						SZURDT
,0							SZURAT
,0							SZURAB
,CUST_ADDRESS.SHIPTO_ID 	SZURRF -- for CS only, old CUST_ADDRESS.SHIPTO_ID
,'' 						SZMLNM
,'' 						SZMLN1
,CASE 
	WHEN CUST_ADDRESS.ADDR_1 IS NOT NULL -- Only use old ADDR_1 if it looks like a street address
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '('
	AND LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)) <> ''
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),''),40)))
	 
	WHEN  CUST_ADDRESS.ADDR_2 IS NOT NULL -- Otherwise old ADDR_2 may work
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '('
	AND CUST_ADDRESS.ADDR_2 NOT LIKE '%@%'
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),''),40)))

	ELSE ''
 END						SZADD1
,CASE
	WHEN CUST_ADDRESS.ADDR_1 IS NOT NULL -- If old ADDR_1 is new ADDR1, check ADDR2, only use it if it looks legit
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '('
	AND LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)) <> ''
	AND
		(
			LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),3) = 'STE'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),5) = 'SUITE'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),3) = '1ST'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),4) = 'BLDG'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),8) = 'BUILDING'
		)
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),''),40)))

	ELSE ''
 END						SZADD2
,''							SZADD3
,''							SZADD4
,CASE 
	WHEN LEN(CUST_ADDRESS.ZIPCODE) <= 12
	THEN LTRIM(RTRIM(CUST_ADDRESS.ZIPCODE))
	ELSE ''
 END						SZADDZ
,CASE
	WHEN LEN(CUST_ADDRESS.CITY) <= 25
	THEN LTRIM(RTRIM(CUST_ADDRESS.CITY))
	ELSE ''	
 END						SZCTY1
,'US'						SZCTR

,CASE
	WHEN LEN(CUST_ADDRESS.STATE) = 2
	THEN CUST_ADDRESS.STATE
	ELSE ''	
 END						SZADDS
,''							SZCOUN
,CASE
	WHEN 
		LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3) IS NOT NULL
		AND LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3) <> ''
		AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.COUNTRY)),1) <= '9'
		THEN
		LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3)
		ELSE ''
 END						SZAR1
,CASE
	WHEN
		CUST_ADDRESS.COUNTRY IS NOT NULL
		AND 	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),4) <> ''
		AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.COUNTRY)),1) <= '9'
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END						SZPH1





,''							SZPHT1
,''							SZAR2
,''							SZPH2
,''							SZPHT2
,''							SZTORG
,'TSAMPSON'					SZUSER
,'Import'					SZPID
,'' 						SZJOBN
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE())	SZUPMJ
,'' 						SZTDAY
,'' 						SZUPMT
,'' 						SZPRGF
,'' 						SZSCCLTP
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)		SZPA8 -- This is the CB ref, if CSB or CB this is NULL
,'' 						SZTICKER
,'' 						SZEXCHG
,'' 						SZDUNS
,'' 						SZCLASS01
,'' 						SZCLASS02
,'' 						SZCLASS03
,'' 						SZCLASS04
,'' 						SZCLASS05
,'' 						SZNOE
,'' 						SZGROWTHR
,'' 						SZYEARSTAR
,'' 						SZAEMPGP
,'' 						SZACTIN
,'' 						SZREVRNG

FROM CUST_ADDRESS CUST_ADDRESS

JOIN CUSTOMER CUSTOMER -- Bill To Addresses
	ON CUSTOMER.ID = CUST_ADDRESS.CUSTOMER_ID
	AND CUST_ADDRESS.ADDR_NO = 1

JOIN _CSB_REF$ CSB_REF
	ON CUST_ADDRESS.CUSTOMER_ID = CSB_REF.CUSTOMER_ID

LEFT JOIN
	(
		SELECT DISTINCT A.CUSTOMER_ID
		FROM CUST_ADDRESS A
		WHERE A.ADDR_NO > 1
	) CB_LIST
	ON CB_LIST.CUSTOMER_ID = CUST_ADDRESS.CUSTOMER_ID
	WHERE CB_LIST.CUSTOMER_ID IS NULL

UNION


/* CS where more than 1 CS
	F0101Z2 zFile 4 VER0009
	CS Customers with >1 ShipTo 

	20190404 Tom Sampson
	VER0002
	- changes after first review
	VER0003
	- lots of error handling and rules for ugly addresses
	VER0004
	-- removed any single shipTo CB from this list
	VER0005
	-- fixed the real problem, '0' where 0
	-- added business unit
	-- replaced - with _
	VER0006
	-- fixed phone number (again)
	VER0007
	-- prepend BC_ to SZALKY
	VER0008
	-- SZURRF -- for CS only, old CUST_ADDRESS.SHIPTO_ID
	VER0009
	-- trim and scale SZURRF to 15 chars
*/
SELECT
 'JDE'						SZEDUS						
,'BAL0004'					SZEDBT
,CAST(105000 + CUST_ADDRESS.ROWID AS INT)		
							SZEDTN -- primary key edi
,0							SZEDLN
,'' 						SZEDCT
,'JDEAB'					SZTYTN
,'' 						SZEDFT
,'' 						SZEDDT
,'' 						SZDRIN
,'' 						SZEDDL
,'N'						SZEDSP
,'' 						SZPNID
,'A'						SZTNAC
,CAST(105000 + CUST_ADDRESS.ROWID AS INT)		
							SZAN8 -- primary key
,'BC_' + LTRIM(RTRIM(CUSTOMER.ID)) + '_' + LTRIM(RTRIM(CAST(CUST_ADDRESS.ADDR_NO AS CHAR)))			
							SZALKY
,'' 						SZTAX
,LEFT(
	LTRIM(RTRIM(
		REPLACE(
			REPLACE(
				CUST_ADDRESS.NAME
			,'.','')
		,',','')
	))
 ,40)						SZALPH
,''							SZDC
,'          20'				SZMCU
,'' 						SZSIC
,'' 						SZLNGP
,'CS'						SZAT1
,'' 						SZCM
,'2'						SZTAXC
,'N'						SZAT2
,'N'						SZAT3
,'N'						SZAT4
,'Y'						SZATR
,'N'						SZAT5
,'N'						SZATP
,'N'						SZATPR
,'N'						SZAB3
,'N'						SZATE
,'' 						SZSBLI
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE()) 
							SZEFTB -- JDE julian today
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)	
							SZAN81
,'' 						SZAN82
,'' 						SZAN83
,'' 						SZAN84
,'' 						SZAN86
,'' 						SZAN85
,'' 						SZAC01
,'' 						SZAC02
,'' 						SZAC03
,'' 						SZAC04
,'' 						SZAC05
,'' 						SZAC06
,'' 						SZAC07
,'' 						SZAC08
,'' 						SZAC09
,'' 						SZAC10
,'' 						SZAC11
,'' 						SZAC12
,'' 						SZAC13
,'' 						SZAC14
,'' 						SZAC15
,'' 						SZAC16
,'' 						SZAC17
,'' 						SZAC18
,'' 						SZAC19
,'' 						SZAC20
,'' 						SZAC21
,'' 						SZAC22
,'' 						SZAC23
,'' 						SZAC24
,'' 						SZAC25
,'' 						SZAC26
,'' 						SZAC27
,'' 						SZAC28
,'' 						SZAC29
,'' 						SZAC30
,'' 						SZGLBA
,0							SZPTI
,'0'						SZPDI
,''							SZMSGA
,''							SZRMK
,''							SZTXCT
,''							SZTX2
,''							SZALP1
,''							SZURCD
,'0'						SZURDT
,0							SZURAT
,0							SZURAB
,LEFT(LTRIM(RTRIM(CUST_ADDRESS.SHIPTO_ID)),15) 					
							SZURRF -- for CS only, old CUST_ADDRESS.SHIPTO_ID
,'' 						SZMLNM
,'' 						SZMLN1
,CASE 
	WHEN CUST_ADDRESS.ADDR_1 IS NOT NULL -- Only use old ADDR_1 if it looks like a street address
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '('
	AND LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)) <> ''
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),''),40)))
	 
	WHEN  CUST_ADDRESS.ADDR_2 IS NOT NULL -- Otherwise old ADDR_2 may work
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),1) <> '('
	AND CUST_ADDRESS.ADDR_2 NOT LIKE '%@%'
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),''),40)))

	ELSE ''
 END						SZADD1
,CASE
	WHEN CUST_ADDRESS.ADDR_1 IS NOT NULL -- If old ADDR_1 is new ADDR1, check ADDR2, only use it if it looks legit
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <= '9' 
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '%'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '#'
	AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)),1) <> '('
	AND LTRIM(RTRIM(CUST_ADDRESS.ADDR_1)) <> ''
	AND
		(
			LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),3) = 'STE'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),5) = 'SUITE'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),3) = '1ST'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),4) = 'BLDG'
			OR LEFT(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),8) = 'BUILDING'
		)
	THEN LTRIM(RTRIM(LEFT(ISNULL(LTRIM(RTRIM(CUST_ADDRESS.ADDR_2)),''),40)))

	ELSE ''
 END						SZADD2
,''							SZADD3
,''							SZADD4
,CASE 
	WHEN LEN(CUST_ADDRESS.ZIPCODE) <= 12
	THEN LTRIM(RTRIM(CUST_ADDRESS.ZIPCODE))
	ELSE ''
 END						SZADDZ
,CASE
	WHEN LEN(CUST_ADDRESS.CITY) <= 25
	THEN LTRIM(RTRIM(CUST_ADDRESS.CITY))
	ELSE ''	
 END						SZCTY1
,'US'						SZCTR

,CASE
	WHEN LEN(LTRIM(RTRIM(CUST_ADDRESS.STATE))) = 2
	THEN LTRIM(RTRIM(CUST_ADDRESS.STATE))
	ELSE ''	
 END						SZADDS
,''							SZCOUN
,CASE
	WHEN 
		LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3) IS NOT NULL
		AND LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3) <> ''
		AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.COUNTRY)),1) <= '9'
		THEN
		LEFT(REPLACE(CUST_ADDRESS.COUNTRY,'-',''), 3)
		ELSE ''
 END						SZAR1
,CASE
	WHEN
		CUST_ADDRESS.COUNTRY IS NOT NULL
		AND 	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),4) <> ''
		AND LEFT(LTRIM(RTRIM(CUST_ADDRESS.COUNTRY)),1) <= '9'
		THEN
	LEFT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),3)
	+ '-' + RIGHT(RIGHT(LEFT(REPLACE(REPLACE(REPLACE(CUST_ADDRESS.COUNTRY,'+',''),' ',''),'-',''),10),7),4)
		ELSE ''
 END						SZPH1
,''							SZPHT1
,''							SZAR2
,''							SZPH2
,''							SZPHT2
,''							SZTORG
,'TSAMPSON'					SZUSER
,'Import'					SZPID
,'' 						SZJOBN
,(DATEPART(year, GETDATE())-1900)*1000 + DATEPART(dayofyear, GETDATE())	
							SZUPMJ
,'' 						SZTDAY
,'' 						SZUPMT
,'' 						SZPRGF
,'' 						SZSCCLTP
,CAST(72000 + CUSTOMER.ROWID AS INTEGER)		
							SZPA8 -- This is the CB ref, if CSB or CB this is NULL
,'' 						SZTICKER
,'' 						SZEXCHG
,'' 						SZDUNS
,'' 						SZCLASS01
,'' 						SZCLASS02
,'' 						SZCLASS03
,'' 						SZCLASS04
,'' 						SZCLASS05
,'' 						SZNOE
,'' 						SZGROWTHR
,'' 						SZYEARSTAR
,'' 						SZAEMPGP
,'' 						SZACTIN
,'' 						SZREVRNG

FROM CUST_ADDRESS CUST_ADDRESS

LEFT JOIN CUSTOMER CUSTOMER ON
	CUST_ADDRESS.CUSTOMER_ID = CUSTOMER.ID

JOIN CUSTOMER_ORDER ORDERS
	ON CUST_ADDRESS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
	AND CUST_ADDRESS.ADDR_NO = ORDERS.SHIP_TO_ADDR_NO

LEFT JOIN
	(
		SELECT DISTINCT A.CUSTOMER_ID
		FROM CUST_ADDRESS A
		WHERE A.ADDR_NO > 1
	) CB_LIST
	ON CB_LIST.CUSTOMER_ID = CUST_ADDRESS.CUSTOMER_ID
WHERE CB_LIST.CUSTOMER_ID IS NOT NULL
 
AND YEAR(ORDERS.ORDER_DATE) >= 2015
